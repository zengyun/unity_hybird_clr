//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_RigidbodyConstraintsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.RigidbodyConstraints),"RigidbodyConstraints");
		L.RegVar("None", get_None, null);
		L.RegVar("FreezePositionX", get_FreezePositionX, null);
		L.RegVar("FreezePositionY", get_FreezePositionY, null);
		L.RegVar("FreezePositionZ", get_FreezePositionZ, null);
		L.RegVar("FreezeRotationX", get_FreezeRotationX, null);
		L.RegVar("FreezeRotationY", get_FreezeRotationY, null);
		L.RegVar("FreezeRotationZ", get_FreezeRotationZ, null);
		L.RegVar("FreezePosition", get_FreezePosition, null);
		L.RegVar("FreezeRotation", get_FreezeRotation, null);
		L.RegVar("FreezeAll", get_FreezeAll, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.RigidbodyConstraints>.Check = CheckType;
		StackTraits<UnityEngine.RigidbodyConstraints>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.RigidbodyConstraints arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.RigidbodyConstraints), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezePositionX(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezePositionX);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezePositionY(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezePositionY);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezePositionZ(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezePositionZ);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeRotationX(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezeRotationX);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeRotationY(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezeRotationY);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeRotationZ(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezeRotationZ);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezePosition(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezePosition);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeRotation(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezeRotation);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeAll(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.RigidbodyConstraints.FreezeAll);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.RigidbodyConstraints o = (UnityEngine.RigidbodyConstraints)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

